{"version":3,"file":"js/main_b181ef3cdf.js","mappings":"oMAKA,SAAeA,EAAAA,EAAAA,IAAe,CAC7BC,QAAS,CACRC,QAASC,EAAAA,GACTC,KAAMC,EAAAA,M,kCCFFC,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,qDAAoD,IACtEC,GAAMD,EAAAA,EAAAA,OAAK,kBAAM,6BAAkD,IACnEE,GAASF,EAAAA,EAAAA,OAAK,kBAAM,6BAAwD,IA2BlF,QAzBA,WAIC,OACCG,EAAAA,cAAA,WACCA,EAAAA,cAAA,UAAI,SACJA,EAAAA,cAACC,EAAAA,GAAM,CAACC,KAAK,WAAU,MACvBF,EAAAA,cAACG,EAAAA,EAAU,CAACC,SAPG,SAACC,EAAMC,GACvBC,QAAQC,IAAIH,EAAMC,EACnB,IAMEN,EAAAA,cAAA,UACCA,EAAAA,cAAA,UAAIA,EAAAA,cAACS,EAAAA,GAAI,CAACC,GAAG,SAAQ,SACrBV,EAAAA,cAAA,UAAIA,EAAAA,cAACS,EAAAA,GAAI,CAACC,GAAG,QAAO,QACpBV,EAAAA,cAAA,UAAIA,EAAAA,cAACS,EAAAA,GAAI,CAACC,GAAG,WAAU,YAEfV,EAAAA,cAACW,EAAAA,SAAQ,CAACC,SAAUZ,EAAAA,cAAA,WAAK,eACrBA,EAAAA,cAACa,EAAAA,GAAM,KACHb,EAAAA,cAACc,EAAAA,GAAK,CAACC,KAAK,QAAQC,QAAShB,EAAAA,cAACJ,EAAI,QAClCI,EAAAA,cAACc,EAAAA,GAAK,CAACC,KAAK,OAAOC,QAAShB,EAAAA,cAACF,EAAG,QAChCE,EAAAA,cAACc,EAAAA,GAAK,CAACC,KAAK,UAAUC,QAAShB,EAAAA,cAACD,EAAM,UAK1D,ECxBakB,EAAAA,WAAoBC,SAASC,cAAc,SACnDC,OACDpB,EAAAA,cAACqB,EAAAA,GAAQ,CAACC,MAAOA,GACbtB,EAAAA,cAACuB,EAAAA,GACG,CACAC,OAAQC,EAAAA,GAWRzB,EAAAA,cAAC0B,EAAAA,GAAa,KACV1B,EAAAA,cAAC2B,EAAG,S,kECxBPlC,GAAemC,E,QAAAA,IAAY,CACvCC,KAAM,UAENC,aAAc,CACbC,MAAO,GAGRC,SAAU,CACTC,UAAS,SAACC,EAAKC,GAAe,IAAXC,EAAOD,EAAPC,QAClBF,EAAMH,OAASK,EAAQC,IACxB,EACAC,UAAS,SAACJ,EAAKK,GAAe,IAAXH,EAAOG,EAAPH,QAClBF,EAAMH,OAASK,EAAQC,IACxB,KAIKG,EAAiC/C,EAAagD,QAAtCR,EAASO,EAATP,UAAWK,EAASE,EAATF,UAEbI,EAAiB,SAACN,GAAO,OAAK,SAACO,GAC3CC,YAAW,WACVD,EAASV,EAAUG,GACpB,GAAG,IACJ,CAAC,EACD,QAAe3C,EAAoB,O,yDCxBtBA,GAAemC,E,QAAAA,IAAY,CACvCC,KAAM,OACNC,aAAc,CACbpC,KAAM,IAEPsC,SAAU,CACTa,SAAQ,SAACX,GACRA,EAAMxC,KAAKoD,MAAsB,IAAhBC,KAAKC,UAAgBC,QAAQ,GAC/C,EACAC,QAAO,SAAChB,EAAKC,GAAe,IAAXC,EAAOD,EAAPC,QAChBF,EAAMxC,KAAKyD,OAAOf,EAAS,EAC5B,KAGKI,EAA8B/C,EAAagD,QAAnCI,EAAQL,EAARK,SAAUK,EAAOV,EAAPU,QAEzB,QAAezD,EAAoB,O","sources":["webpack://source-map/./src/store/index.js","webpack://source-map/./src/app.jsx","webpack://source-map/./src/main.js","webpack://source-map/./src/store/features/counterSlice.js","webpack://source-map/./src/store/features/listSlice.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport counterSlice from \"./features/counterSlice\";\r\nimport listSlice from \"./features/listSlice\";\r\n\r\n// configureStore创建一个redux数据\r\nexport default configureStore({\r\n\treducer: {\r\n\t\tcounter: counterSlice,\r\n\t\tlist: listSlice,\r\n\t},\r\n});\r\n","import React, { Suspense, lazy } from \"react\";\r\nimport { Link, Route, Routes } from \"react-router-dom\";\r\n// import Home from \"./page/home/index\";\r\n// import Nav from \"./page/nav/index\";\r\nimport { Button, DatePicker } from 'antd'\r\n\r\nconst Home = lazy(() => import(/* webpackChunkName: 'home' */ \"./page/home\"));\r\nconst Nav = lazy(() => import(/* webpackChunkName: 'nav' */ \"./page/nav\"));\r\nconst Reduce = lazy(() => import(/* webpackChunkName: 'reduce' */ \"./page/reduce\"));\r\n\r\nfunction App() {\r\n\tconst onChange = (date, dateString) => {\r\n\t\tconsole.log(date, dateString);\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>myApp</h2>\r\n\t\t\t<Button type=\"primary\">按钮</Button>\r\n\t\t\t<DatePicker onChange={onChange} />\r\n\t\t\t<ul>\r\n\t\t\t\t<li><Link to=\"/home\">Home</Link></li>\r\n\t\t\t\t<li><Link to=\"/nav\">Nav</Link></li>\r\n\t\t\t\t<li><Link to=\"/reduce\">Reduce</Link></li>\r\n\t\t\t</ul>\r\n            <Suspense fallback={<div>loading...</div>}>\r\n                <Routes>\r\n                    <Route path=\"/home\" element={<Home />}></Route>\r\n                    <Route path=\"/nav\" element={<Nav />}></Route>\r\n                    <Route path=\"/reduce\" element={<Reduce />}></Route>\r\n                </Routes>\r\n            </Suspense>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport zhCN from 'antd/locale/zh_CN';\r\nimport { ConfigProvider } from 'antd';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport App from './app'\r\n\r\nconst root = ReactDOM.createRoot(document.querySelector('#app'))\r\nroot.render(\r\n    <Provider store={store}>\r\n        <ConfigProvider \r\n            // 语言\r\n            locale={zhCN}\r\n            // theme={{\r\n            //     token: {\r\n            //     // Seed Token，影响范围大\r\n            //     colorPrimary: '#00b96b',\r\n            //     borderRadius: 1,\r\n            //     // 派生变量，影响范围小\r\n            //     colorBgContainer: '#f6ffed',\r\n            //     },\r\n            // }}\r\n        >\r\n            <BrowserRouter>\r\n                <App />\r\n            </BrowserRouter>\r\n        </ConfigProvider>\r\n    </Provider>\r\n)","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const counterSlice = createSlice({\r\n\tname: \"counter\", // 命名空间，在调用action的时候会默认的设置为action的前缀\r\n\t// 初始值\r\n\tinitialState: {\r\n\t\tcount: 1,\r\n\t},\r\n\t// 这里的属性会自动的导出为actions，在组件中可以直接通过dispatch进行触发\r\n\treducers: {\r\n\t\tincrement(state, { payload }) {\r\n\t\t\tstate.count += payload.step; // 内置了immutable\r\n\t\t},\r\n\t\tdecrement(state, { payload }) {\r\n\t\t\tstate.count -= payload.step;\r\n\t\t},\r\n\t},\r\n});\r\n// 导出actions\r\nexport const { increment, decrement } = counterSlice.actions;\r\n// 内置了thunk插件，可以直接处理异步请求\r\nexport const asyncIncrement = (payload) => (dispatch) => {\r\n\tsetTimeout(() => {\r\n\t\tdispatch(increment(payload));\r\n\t}, 1000);\r\n};\r\nexport default counterSlice.reducer; // 导出reducer，在创建store时使用到\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const counterSlice = createSlice({\r\n\tname: \"list\",\r\n\tinitialState: {\r\n\t\tlist: [],\r\n\t},\r\n\treducers: {\r\n\t\tpushList(state) {\r\n\t\t\tstate.list.push((Math.random() * 100).toFixed(0));\r\n\t\t},\r\n\t\tdelList(state, { payload }) {\r\n\t\t\tstate.list.splice(payload, 1);\r\n\t\t},\r\n\t},\r\n});\r\nexport const { pushList, delList } = counterSlice.actions;\r\n\r\nexport default counterSlice.reducer;\r\n"],"names":["configureStore","reducer","counter","counterSlice","list","listSlice","Home","lazy","Nav","Reduce","React","Button","type","DatePicker","onChange","date","dateString","console","log","Link","to","Suspense","fallback","Routes","Route","path","element","ReactDOM","document","querySelector","render","Provider","store","ConfigProvider","locale","zhCN","BrowserRouter","App","createSlice","name","initialState","count","reducers","increment","state","_ref","payload","step","decrement","_ref2","_counterSlice$actions","actions","asyncIncrement","dispatch","setTimeout","pushList","push","Math","random","toFixed","delList","splice"],"sourceRoot":""}